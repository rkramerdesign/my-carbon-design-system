/**
 * Copyright IBM Corp. 2016, 2023
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

import PropTypes from 'prop-types';
import React from 'react';
import cx from 'classnames';
import { usePrefix } from '../../internal/usePrefix.js';

const TableDecoratorRow = ({
  className,
  decorator
}) => {
  const prefix = usePrefix();
  const TableDecoratorRowClasses = cx({
    ...(className && {
      [className]: true
    }),
    [`${prefix}--table-column-decorator`]: true,
    [`${prefix}--table-column-decorator--active`]: decorator
  });
  let normalizedDecorator = /*#__PURE__*/React.isValidElement(decorator) ? decorator : null;
  if (normalizedDecorator && normalizedDecorator['type']?.displayName === 'AILabel') {
    normalizedDecorator = /*#__PURE__*/React.cloneElement(normalizedDecorator, {
      size: 'mini'
    });
  }
  return /*#__PURE__*/React.createElement("td", {
    className: TableDecoratorRowClasses
  }, normalizedDecorator);
};
TableDecoratorRow.displayName = 'TableDecoratorRow';
TableDecoratorRow.propTypes = {
  /**
   * The CSS class names of the cell that wraps the underlying input control
   */
  className: PropTypes.string,
  /**
   * **Experimental**: Provide a `decorator` component to be rendered inside the `TableDecoratorRow` component
   */
  decorator: PropTypes.node
};

export { TableDecoratorRow as default };
